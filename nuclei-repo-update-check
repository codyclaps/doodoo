variables:
  NUCLEI_DAST_PROJECT_ID: "<project_id>"
  GITLAB_URL: "https://gitlab.example.com"

stages:
  - check
  - build
  - scan
  - map
  - generate_artifacts

check_nuclei_dast_updates:
  stage: check
  image: alpine:latest
  before_script:
    - apk add --no-cache git jq curl
  script:
    - |
      LATEST_TAG=$(curl -s https://api.github.com/repos/projectdiscovery/nuclei/releases/latest | jq -r .tag_name)
      CURRENT_TAG=$(curl -s --header "PRIVATE-TOKEN: $NUCLEI_DAST_ACCESS_TOKEN" "$GITLAB_URL/api/v4/projects/$NUCLEI_DAST_PROJECT_ID/repository/tags" | jq -r '.[0].name' | sort -V | tail -n1 || echo "v0.0.0")
      if [ "$LATEST_TAG" != "$CURRENT_TAG" ]; then
        echo "New version detected: $LATEST_TAG"
        BRANCH_NAME="update-to-$LATEST_TAG"
        git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@$GITLAB_URL/Poseidon/Ingress/Nuclei-DAST.git
        cd Nuclei-DAST
        git checkout -b $BRANCH_NAME
        git remote add github https://github.com/projectdiscovery/nuclei.git
        git pull github $LATEST_TAG
        git push origin $BRANCH_NAME
        curl --request POST --header "PRIVATE-TOKEN: $NUCLEI_DAST_ACCESS_TOKEN" "$GITLAB_URL/api/v4/projects/$NUCLEI_DAST_PROJECT_ID/merge_requests?source_branch=$BRANCH_NAME&target_branch=main&title=Update%20Nuclei%20DAST%20to%20$LATEST_TAG&description=New%20version%20$LATEST_TAG%20available.%20Please%20review%20and%20approve."
      else
        echo "No new version available."
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
